import{s as Z,E as K,H as X,r as T,l as Y,C as ee,k as te,p as le,x as Q,c as p,a as s,d as J,_ as se,z as ae,h as w,y as u,A as c,D as F,F as G,f as L,t as f,o as g}from"./BNQpVJa0.js";import{u as ne}from"./rKAU6hgB.js";import{a as W}from"./xsH4HHeE.js";import{D as h}from"./DOXiyJsP.js";const ie={class:"app-wrapper"},oe={class:"container"},ue={class:"form-group"},de={class:"form-group"},re=["value"],ce={key:0,class:"schedule-manager-panel"},me={class:"schedule-header"},ve={class:"schedule-info"},pe={class:"schedule-inputs"},fe={class:"time-input"},ge=["for"],_e=["id","onUpdate:modelValue","onInput"],he={class:"time-input"},be=["for"],ye=["id","onUpdate:modelValue","onInput"],Se={key:0,class:"current-session-schedule"},ke={class:"active-schedule-display"},Te={class:"schedule-item"},Fe={class:"schedule-value"},xe={class:"schedule-item"},Pe={class:"schedule-value"},Ue={key:1,class:"debug-info"},Me={__name:"[id]",setup(Re){const x=K(),b=X(),j=T(!1),t=T({title:"",category:"",event:"",excerpt:"",link:"",link2:"",link3:"",link4:"",content:"",event_type:"",session_name:"",scheduled_enable_time:null,scheduled_disable_time:null,status:""}),N=Y(()=>!0),y={f1:[{value:"Free Practice 1 F1",text:"FP1 (F1)"},{value:"Free Practice 2 F1",text:"FP2 (F1)"},{value:"Free Practice 3 F1",text:"FP3 (F1)"},{value:"Qualifying F1",text:"Qualifying (F1)"},{value:"Race F1",text:"Race (F1)"}],f1Sprint:[{value:"Free Practice 1 F1",text:"FP1 (F1)"},{value:"Sprint Qualifying F1",text:"Sprint Qualifying (F1)"},{value:"Sprint Race F1",text:"Sprint (F1)"},{value:"Qualifying F1",text:"Qualifying (F1)"},{value:"Race F1",text:"Race (F1)"}],motogp:[{value:"Free Practice 1 MotoGP",text:"FP1 (MotoGP)"},{value:"Practice MotoGP",text:"Practice (MotoGP)"},{value:"Free Practice 2 MotoGP",text:"FP2 (MotoGP)"},{value:"Qualifying MotoGP",text:"Qualifying (MotoGP)"},{value:"Sprint Race MotoGP",text:"Sprint (MotoGP)"},{value:"Warm Up",text:"Warm Up (MotoGP)"},{value:"Race MotoGP",text:"Race (MotoGP)"}],other:[{value:"Race FIA WEC",text:"Race (WEC)"},{value:"Match",text:"Match (All Football)"}]},i=ee({f1:{},f1Sprint:{},motogp:{},other:{}}),m=T([]),v=()=>{const a=t.value.event_type;return a==="(The link will remain the same for all sessions in this race week including FP1, FP2, FP3, Qualifying, and Race)"?"f1":a==="(The link will remain the same for all sessions in this race week including FP1, Sprint Qualifying, Sprint Race, Qualifying, and Race)"?"f1Sprint":a==="(The link will remain the same for all sessions in this race week including FP1, Practice, FP2, Qualifying, Sprint, Warm Up and Race)"?"motogp":"other"},I=a=>{if(!a)return"Belum diatur";try{return h.fromISO(a).setZone("Asia/Jakarta").toFormat("dd MMM yyyy, HH:mm")}catch(e){return console.error("Error formatting datetime:",e),a}},S=a=>{const e=v(),l=y[e].find(n=>n.value===a);return l?l.text:a},E=()=>{const a=v();console.log("Initializing session schedules for type:",a);const e=y[a]||[];if(i[a]&&Object.keys(i[a]).length>0){m.value=e.map(o=>{const d=i[a][o.value];return{value:o.value,text:o.text,startTime:(d==null?void 0:d.startTime)||null,endTime:(d==null?void 0:d.endTime)||null}}),console.log("Using existing session schedules with preserved order:",m.value);return}const l=e.map(o=>({value:o.value,text:o.text,startTime:null,endTime:null})),n={};l.forEach(o=>{n[o.value]={text:o.text,startTime:o.startTime,endTime:o.endTime}}),i[a]=n,m.value=l,console.log("Created new ordered session schedules:",m.value)},k=(a,e,l)=>{var d;const n=v();console.log(`Updating schedule for session ${a}, type ${e} with value ${l}`),i[n]||(i[n]={}),i[n][a]||(i[n][a]={text:((d=y[n].find(_=>_.value===a))==null?void 0:d.text)||a,startTime:null,endTime:null}),i[n][a][e]=l,t.value.session_name===a&&(e==="startTime"?(t.value.scheduled_enable_time=l,console.log("Updated stream enable time:",l)):e==="endTime"&&(t.value.scheduled_disable_time=l,console.log("Updated stream disable time:",l)));const o=m.value.find(_=>_.value===a);o&&(o[e]=l)},P=()=>{const a=t.value.session_name;if(!a)return;const e=v();if(console.log(`Updating schedule from selection: ${a}, type: ${e}`),i[e]||(i[e]={}),!i[e][a])console.log("Session not found in schedules, creating new entry"),i[e][a]={text:S(a),startTime:t.value.scheduled_enable_time,endTime:t.value.scheduled_disable_time};else{const l=i[e][a];console.log("Found session schedule:",l),l&&(l.startTime&&(t.value.scheduled_enable_time=l.startTime,console.log("Setting enable time from session:",l.startTime)),l.endTime&&(t.value.scheduled_disable_time=l.endTime,console.log("Setting disable time from session:",l.endTime)))}},U=T([]),M=()=>{const a=v();console.log("Updating session options for type:",a),U.value=y[a]||[];const e=U.value.map(l=>l.value);e.includes(t.value.session_name)||(t.value.session_name=e[0]||"",P()),E()},{API_URL:$}=te().public,O=a=>{if(!a)return null;try{const e=a.includes("T")?h.fromISO(a,{zone:"UTC"}):h.fromSQL(a,{zone:"UTC"});return e.isValid?e.setZone("Asia/Jakarta").toFormat("yyyy-MM-dd'T'HH:mm"):(console.error("Invalid UTC time format:",a),null)}catch(e){return console.error("Error converting UTC to WIB:",e),null}},V=async()=>{try{const a=b.params.slug||b.params.id;console.log("Fetching stream data for slug:",a);const{data:e}=await W.get(`${$}/streams/${a}`);console.log("Raw data:",e),e.scheduled_enable_time&&(e.scheduled_enable_time=O(e.scheduled_enable_time),console.log("Converted enable time:",e.scheduled_enable_time)),e.scheduled_disable_time&&(e.scheduled_disable_time=O(e.scheduled_disable_time),console.log("Converted disable time:",e.scheduled_disable_time)),t.value=e;let l=null;if(typeof e.session_schedules=="string")try{l=JSON.parse(e.session_schedules),console.log("Parsed session schedules from JSON string")}catch(n){console.error("Error parsing session_schedules JSON:",n)}else e.session_schedules&&typeof e.session_schedules=="object"&&(l=e.session_schedules,console.log("Using session_schedules object directly"));if(l&&(Object.entries(l).forEach(([n,o])=>{i[n]=o}),console.log("Loaded session schedules:",i)),M(),t.value.session_name&&(!t.value.scheduled_enable_time||!t.value.scheduled_disable_time)&&P(),t.value.session_name&&(t.value.scheduled_enable_time||t.value.scheduled_disable_time)){const n=v();i[n]||(i[n]={}),i[n][t.value.session_name]||(i[n][t.value.session_name]={text:S(t.value.session_name),startTime:null,endTime:null}),t.value.scheduled_enable_time&&(i[n][t.value.session_name].startTime=t.value.scheduled_enable_time),t.value.scheduled_disable_time&&(i[n][t.value.session_name].endTime=t.value.scheduled_disable_time),console.log(`Updated session '${t.value.session_name}' in schedules:`,i[n][t.value.session_name]),E()}}catch(a){console.error("Error fetching stream data:",a)}},D=()=>{x.push("/rikya/components/Livestream")},z=()=>{x.push("/rikya/components/Artikel")};ne({title:"Edit Streaming",ogTitle:"Edit Streaming"});const B=()=>{confirm("Apakah Anda yakin ingin menghapus semua jadwal yang telah diatur?")&&(m.value.forEach(a=>{a.startTime=null,a.endTime=null,k(a.value,"startTime",null),k(a.value,"endTime",null)}),t.value.scheduled_enable_time=null,t.value.scheduled_disable_time=null,$toast.success("Semua jadwal berhasil dihapus"))};le(async()=>{await V()}),Q(()=>t.value.event_type,M),Q(()=>[t.value.scheduled_enable_time,t.value.scheduled_disable_time],([a,e])=>{if(t.value.session_name){const l=v();i[l]||(i[l]={}),i[l][t.value.session_name]||(i[l][t.value.session_name]={text:S(t.value.session_name),startTime:null,endTime:null}),a!==void 0&&(console.log(`Watched change to enable time: ${a}`),i[l][t.value.session_name].startTime=a),e!==void 0&&(console.log(`Watched change to disable time: ${e}`),i[l][t.value.session_name].endTime=e);const n=m.value.find(o=>o.value===t.value.session_name);n&&(a!==void 0&&(n.startTime=a),e!==void 0&&(n.endTime=e))}});const H=async()=>{var a,e,l,n;try{const o=b.params.slug||b.params.id;if(!o){alert("Slug tidak ditemukan!");return}const d=v(),_=i;if(console.log("Session schedules to save:",_),t.value.session_name&&((a=i[d])!=null&&a[t.value.session_name])){const r=i[d][t.value.session_name];t.value.scheduled_enable_time=r.startTime,t.value.scheduled_disable_time=r.endTime}let R=null;if(t.value.scheduled_enable_time)try{const r=h.fromISO(t.value.scheduled_enable_time,{zone:"Asia/Jakarta"});r.isValid?(R=r.toISO(),console.log("Converted enable time to ISO:",R)):console.error("Invalid enable time format:",t.value.scheduled_enable_time)}catch(r){console.error("Error converting enable time:",r)}let C=null;if(t.value.scheduled_disable_time)try{const r=h.fromISO(t.value.scheduled_disable_time,{zone:"Asia/Jakarta"});r.isValid?(C=r.toISO(),console.log("Converted disable time to ISO:",C)):console.error("Invalid disable time format:",t.value.scheduled_disable_time)}catch(r){console.error("Error converting disable time:",r)}const A={...t.value,scheduled_enable_time:R,scheduled_disable_time:C,session_schedules:_};console.log("Sending payload:",A);const q=await W.put(`${$}/streams/${o}`,A);console.log("API response:",q.data),alert("Stream berhasil diperbarui!"),x.go(-1)}catch(o){console.error("Error updating stream:",((e=o.response)==null?void 0:e.data)||o.message),alert(`Gagal memperbarui stream: ${((n=(l=o.response)==null?void 0:l.data)==null?void 0:n.error)||o.message}`)}};return(a,e)=>(g(),p("div",ie,[s("header",null,[s("div",{class:"header-content"},[s("h1",{class:"logo",onClick:z,style:{cursor:"pointer"}},e[12]||(e[12]=[s("img",{src:se,alt:"RacingStation Logo",class:"logo-image"},null,-1),J(" Dashboard ")]))])]),s("div",oe,[e[33]||(e[33]=s("h2",{class:"black-text"},"Edit Livestream",-1)),s("form",{onSubmit:ae(H,["prevent"])},[s("div",null,[e[13]||(e[13]=s("label",{for:"title"},"Title",-1)),u(s("input",{type:"text","onUpdate:modelValue":e[0]||(e[0]=l=>t.value.title=l),id:"title",required:""},null,512),[[c,t.value.title]])]),s("div",ue,[e[15]||(e[15]=s("label",{for:"category"},"Category:",-1)),u(s("select",{id:"category","onUpdate:modelValue":e[1]||(e[1]=l=>t.value.category=l),required:""},e[14]||(e[14]=[s("option",{value:"Motorsport"},"Motorsport",-1),s("option",{value:"Football"},"Football",-1)]),512),[[F,t.value.category]])]),s("div",null,[e[16]||(e[16]=s("label",{for:"event"},"Live Event",-1)),u(s("input",{type:"text","onUpdate:modelValue":e[2]||(e[2]=l=>t.value.event=l),id:"event"},null,512),[[c,t.value.event]])]),s("div",null,[e[18]||(e[18]=s("label",{for:"event_type"},"Tipe Race Week",-1)),u(s("select",{id:"event_type","onUpdate:modelValue":e[3]||(e[3]=l=>t.value.event_type=l),onChange:M},e[17]||(e[17]=[s("option",{value:""},"kosong (Race WEC dan lainnya)",-1),s("option",{value:"(The link will remain the same for all sessions in this race week including FP1, FP2, FP3, Qualifying, and Race)"},"Normal (F1)",-1),s("option",{value:"(The link will remain the same for all sessions in this race week including FP1, Sprint Qualifying, Sprint Race, Qualifying, and Race)"},"Sprint (F1)",-1),s("option",{value:"(The link will remain the same for all sessions in this race week including FP1, Practice, FP2, Qualifying, Sprint, Warm Up and Race)"},"Normal (MotoGP)",-1)]),544),[[F,t.value.event_type]])]),s("div",null,[e[19]||(e[19]=s("label",{for:"excerpt"},"Excerpt",-1)),u(s("input",{type:"text","onUpdate:modelValue":e[4]||(e[4]=l=>t.value.excerpt=l),id:"excerpt",required:""},null,512),[[c,t.value.excerpt]])]),s("div",null,[e[20]||(e[20]=s("label",{for:"link"},"Link 1",-1)),u(s("input",{type:"text","onUpdate:modelValue":e[5]||(e[5]=l=>t.value.link=l),id:"link",required:""},null,512),[[c,t.value.link]])]),s("div",null,[e[21]||(e[21]=s("label",{for:"link2"},"Link 2",-1)),u(s("input",{type:"text","onUpdate:modelValue":e[6]||(e[6]=l=>t.value.link2=l),id:"link2"},null,512),[[c,t.value.link2]])]),s("div",null,[e[22]||(e[22]=s("label",{for:"link3"},"Link 3",-1)),u(s("input",{type:"text","onUpdate:modelValue":e[7]||(e[7]=l=>t.value.link3=l),id:"link3"},null,512),[[c,t.value.link3]])]),s("div",null,[e[23]||(e[23]=s("label",{for:"link4"},"Link 4",-1)),u(s("input",{type:"text","onUpdate:modelValue":e[8]||(e[8]=l=>t.value.link4=l),id:"link4"},null,512),[[c,t.value.link4]])]),s("div",null,[e[24]||(e[24]=s("label",{for:"content"},"Content",-1)),u(s("textarea",{"onUpdate:modelValue":e[9]||(e[9]=l=>t.value.content=l),id:"content",required:""},null,512),[[c,t.value.content]])]),s("div",de,[e[25]||(e[25]=s("label",{for:"session_name"},"Pilih Sesi",-1)),u(s("select",{id:"session_name","onUpdate:modelValue":e[10]||(e[10]=l=>t.value.session_name=l),onChange:P},[(g(!0),p(G,null,L(U.value,l=>(g(),p("option",{key:l.value,value:l.value},f(l.text),9,re))),128))],544),[[F,t.value.session_name]])]),N.value?(g(),p("div",ce,[s("div",me,[s("h3",null,f(t.value.event_type?"Jadwal Untuk Semua Sesi":"Jadwal Event"),1)]),s("p",ve,f(t.value.event_type?"Atur jadwal untuk semua sesi dalam race week. Jadwal akan otomatis diterapkan saat memilih sesi.":'Atur jadwal untuk event "Race WEC dan lainnya". Jadwal akan diterapkan ke sesi yang dipilih.'),1),(g(!0),p(G,null,L(m.value,(l,n)=>(g(),p("div",{key:n,class:"session-schedule"},[s("h4",null,f(l.text),1),s("div",pe,[s("div",fe,[s("label",{for:`start-${n}`},"Mulai",8,ge),u(s("input",{type:"datetime-local",id:`start-${n}`,"onUpdate:modelValue":o=>l.startTime=o,onInput:o=>k(l.value,"startTime",l.startTime)},null,40,_e),[[c,l.startTime]])]),s("div",he,[s("label",{for:`end-${n}`},"Selesai",8,be),u(s("input",{type:"datetime-local",id:`end-${n}`,"onUpdate:modelValue":o=>l.endTime=o,onInput:o=>k(l.value,"endTime",l.endTime)},null,40,ye),[[c,l.endTime]])])])]))),128)),s("button",{type:"button",onClick:B,class:"clear-schedule-btn"},e[26]||(e[26]=[s("i",{class:"fas fa-trash-alt"},null,-1),J(" Hapus Semua Jadwal")])),t.value.session_name?(g(),p("div",Se,[s("h3",null,"Jadwal Aktif Saat Ini ("+f(S(t.value.session_name))+")",1),s("div",ke,[s("div",Te,[e[27]||(e[27]=s("span",{class:"schedule-label"},"Jadwal Enable:",-1)),s("span",Fe,f(I(t.value.scheduled_enable_time)),1)]),s("div",xe,[e[28]||(e[28]=s("span",{class:"schedule-label"},"Jadwal Disable:",-1)),s("span",Pe,f(I(t.value.scheduled_disable_time)),1)])])])):w("",!0)])):w("",!0),s("div",null,[e[30]||(e[30]=s("label",{for:"status"},"Status",-1)),u(s("select",{"onUpdate:modelValue":e[11]||(e[11]=l=>t.value.status=l),id:"status"},e[29]||(e[29]=[s("option",{value:"enable"},"Enable",-1),s("option",{value:"disable"},"Disable",-1)]),512),[[F,t.value.status]])]),j.value?(g(),p("div",Ue,[e[31]||(e[31]=s("h3",null,"Debug Info:",-1)),s("pre",null,f(JSON.stringify(i,null,2)),1)])):w("",!0),s("div",{class:"buttons-container"},[e[32]||(e[32]=s("button",{type:"submit",class:"action-btn update-btn"},"Update Stream",-1)),s("button",{type:"button",onClick:D,class:"action-btn cancel-btn"},"Cancel")])],32)])]))}},$e=Z(Me,[["__scopeId","data-v-d435bcf0"]]);export{$e as default};
