import{v as T,c as m,a as e,d as g,A as k,z as p,E as C,F as N,f as x,B as y,t as f,r as _,k as E,p as M,q,o as v}from"./DPDbZXkn.js";import{u as j}from"./DvjvNq9H.js";import{_ as A}from"./BxISKULh.js";const I={setup(){const a=_({category_id:"",session_name:"",session_order:1}),s=_([]),i=_(!1),o=q(),{API_URL:l}=E().public,b=async()=>{try{console.log("Fetching categories for dropdown...");const t=await fetch(`${l}/event-categories`);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const r=await t.json();console.log("Categories loaded:",r),s.value=r}catch(t){console.error("Error fetching categories:",t),alert("Gagal memuat data categories: "+t.message)}},n=async()=>{if(!i.value)try{i.value=!0;const t={category_id:parseInt(a.value.category_id),session_name:a.value.session_name.trim(),session_order:parseInt(a.value.session_order)};console.log("Creating new session with payload:",t),console.log("API URL:",`${l}/sessions`);const r=await fetch(`${l}/sessions`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(console.log("Create response status:",r.status),!r.ok){let c=`HTTP error! status: ${r.status}`;try{const u=await r.json();console.log("Create error response:",u),u.error&&(c=u.error)}catch{console.log("Could not parse error response as JSON")}throw new Error(c)}const S=r.headers.get("content-type");if(!S||!S.includes("application/json")){const c=await r.text();throw console.log("Non-JSON create response:",c),new Error("Server returned non-JSON response")}const d=await r.json();if(console.log("Create result:",d),d.message&&d.id)alert("Session berhasil dibuat!"),o.push("/rikya/components/Session");else throw new Error(d.error||"Gagal membuat session")}catch(t){console.error("Error creating session:",t),alert(t.message||"Terjadi kesalahan saat membuat session")}finally{i.value=!1}},w=()=>{o.push("/rikya/components/Session")},h=()=>{a.value={category_id:"",session_name:"",session_order:1}};return M(async()=>{await b()}),j({title:"Add New Session",ogTitle:"Add New Session"}),{session:a,categories:s,isSubmitting:i,submitSession:n,navigateToSessions:w,resetForm:h}}},O={class:"app-wrapper"},P={class:"header-content"},D={class:"dashboard"},R={class:"form-container"},U={class:"form-group"},V=["value"],B={class:"form-group"},F={class:"form-group"},J={class:"buttons-container"},L=["disabled"];function G(a,s,i,o,l,b){return v(),m("div",O,[e("header",null,[e("div",P,[e("h1",{class:"logo",onClick:s[0]||(s[0]=(...n)=>o.navigateToSessions&&o.navigateToSessions(...n)),style:{cursor:"pointer"}},s[6]||(s[6]=[e("img",{src:A,alt:"RacingStation Logo",class:"logo-image"},null,-1),g(" Dashboard ")]))])]),e("div",D,[e("div",R,[s[11]||(s[11]=e("h1",{class:"black-text"},"Add New Session",-1)),e("form",{onSubmit:s[5]||(s[5]=k((...n)=>o.submitSession&&o.submitSession(...n),["prevent"]))},[e("div",U,[s[8]||(s[8]=e("label",{for:"category_id"},[g("Category "),e("span",{class:"required"},"*")],-1)),p(e("select",{id:"category_id","onUpdate:modelValue":s[1]||(s[1]=n=>o.session.category_id=n),required:""},[s[7]||(s[7]=e("option",{value:""},"Pilih Category",-1)),(v(!0),m(N,null,x(o.categories,n=>(v(),m("option",{key:n.id,value:n.id},f(n.name)+" (ID: "+f(n.id)+")",9,V))),128))],512),[[C,o.session.category_id]])]),e("div",B,[s[9]||(s[9]=e("label",{for:"session_name"},[g("Session Name "),e("span",{class:"required"},"*")],-1)),p(e("input",{type:"text",id:"session_name","onUpdate:modelValue":s[2]||(s[2]=n=>o.session.session_name=n),required:"",placeholder:"Masukkan nama session"},null,512),[[y,o.session.session_name]])]),e("div",F,[s[10]||(s[10]=e("label",{for:"session_order"},[g("Session Order "),e("span",{class:"required"},"*")],-1)),p(e("input",{type:"number",id:"session_order","onUpdate:modelValue":s[3]||(s[3]=n=>o.session.session_order=n),min:"1",required:"",placeholder:"Masukkan urutan session"},null,512),[[y,o.session.session_order]])]),e("div",J,[e("button",{type:"submit",class:"action-btn create-btn",disabled:o.isSubmitting},f(o.isSubmitting?"Creating...":"Create Session"),9,L),e("button",{type:"button",onClick:s[4]||(s[4]=(...n)=>o.navigateToSessions&&o.navigateToSessions(...n)),class:"action-btn cancel-btn"},"Cancel")])],32)])])])}const Q=T(I,[["render",G],["__scopeId","data-v-414da0e0"]]);export{Q as default};
