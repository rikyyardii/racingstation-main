import{s as K,G as X,H as Y,r as T,l as ee,C as te,k as le,p as se,x as Q,c as m,a as t,d as G,_ as ne,z as ae,h as F,y as u,A as c,D as x,F as J,f as L,I as W,t as g,o as v}from"./CFG83du_.js";import{u as ie}from"./C24GBl0v.js";import{a as V}from"./xsH4HHeE.js";import{D as _}from"./DOXiyJsP.js";const oe={class:"app-wrapper"},ue={class:"container"},de={class:"form-group"},re={class:"form-group"},ce=["value"],me={class:"auto-switch-controls"},ve={class:"control-item"},pe={class:"toggle-switch"},fe={key:0,class:"control-item"},ge={class:"toggle-switch"},he={key:0,class:"schedule-manager-panel"},_e={class:"schedule-header"},be={class:"schedule-info"},ye={class:"schedule-inputs"},Se={class:"time-input"},ke=["for"],Te=["id","onUpdate:modelValue","onInput"],Fe={class:"time-input"},xe=["for"],Pe=["id","onUpdate:modelValue","onInput"],Ue={key:0,class:"current-session-schedule"},we={class:"active-schedule-display"},Me={class:"schedule-item"},Ce={class:"schedule-value"},Re={class:"schedule-item"},Ie={class:"schedule-value"},Ee={key:1,class:"debug-info"},Oe={__name:"[id]",setup($e){const P=X(),b=Y(),j=T(!1),l=T({title:"",category:"",event:"",excerpt:"",link:"",link2:"",link3:"",link4:"",content:"",event_type:"",session_name:"",scheduled_enable_time:null,scheduled_disable_time:null,status:""}),N=ee(()=>!0),y={f1:[{value:"Free Practice 1 F1",text:"FP1 (F1)"},{value:"Free Practice 2 F1",text:"FP2 (F1)"},{value:"Free Practice 3 F1",text:"FP3 (F1)"},{value:"Qualifying F1",text:"Qualifying (F1)"},{value:"Race F1",text:"Race (F1)"}],f1Sprint:[{value:"Free Practice 1 F1",text:"FP1 (F1)"},{value:"Sprint Qualifying F1",text:"Sprint Qualifying (F1)"},{value:"Sprint Race F1",text:"Sprint (F1)"},{value:"Qualifying F1",text:"Qualifying (F1)"},{value:"Race F1",text:"Race (F1)"}],motogp:[{value:"Free Practice 1 MotoGP",text:"FP1 (MotoGP)"},{value:"Practice MotoGP",text:"Practice (MotoGP)"},{value:"Free Practice 2 MotoGP",text:"FP2 (MotoGP)"},{value:"Qualifying MotoGP",text:"Qualifying (MotoGP)"},{value:"Sprint Race MotoGP",text:"Sprint (MotoGP)"},{value:"Warm Up",text:"Warm Up (MotoGP)"},{value:"Race MotoGP",text:"Race (MotoGP)"}],other:[{value:"Race FIA WEC",text:"Race (WEC)"},{value:"Match",text:"Match (All Football)"}]},i=te({f1:{},f1Sprint:{},motogp:{},other:{}}),p=T([]),f=()=>{const n=l.value.event_type;return n==="(The link will remain the same for all sessions in this race week including FP1, FP2, FP3, Qualifying, and Race)"?"f1":n==="(The link will remain the same for all sessions in this race week including FP1, Sprint Qualifying, Sprint Race, Qualifying, and Race)"?"f1Sprint":n==="(The link will remain the same for all sessions in this race week including FP1, Practice, FP2, Qualifying, Sprint, Warm Up and Race)"?"motogp":"other"},I=n=>{if(!n)return"Belum diatur";try{return _.fromISO(n).setZone("Asia/Jakarta").toFormat("dd MMM yyyy, HH:mm")}catch(e){return console.error("Error formatting datetime:",e),n}},S=n=>{const e=f(),s=y[e].find(a=>a.value===n);return s?s.text:n},E=()=>{const n=f();console.log("Initializing session schedules for type:",n);const e=y[n]||[];if(i[n]&&Object.keys(i[n]).length>0){p.value=e.map(o=>{const d=i[n][o.value];return{value:o.value,text:o.text,startTime:(d==null?void 0:d.startTime)||null,endTime:(d==null?void 0:d.endTime)||null}}),console.log("Using existing session schedules with preserved order:",p.value);return}const s=e.map(o=>({value:o.value,text:o.text,startTime:null,endTime:null})),a={};s.forEach(o=>{a[o.value]={text:o.text,startTime:o.startTime,endTime:o.endTime}}),i[n]=a,p.value=s,console.log("Created new ordered session schedules:",p.value)},k=(n,e,s)=>{var d;const a=f();console.log(`Updating schedule for session ${n}, type ${e} with value ${s}`),i[a]||(i[a]={}),i[a][n]||(i[a][n]={text:((d=y[a].find(h=>h.value===n))==null?void 0:d.text)||n,startTime:null,endTime:null}),i[a][n][e]=s,l.value.session_name===n&&(e==="startTime"?(l.value.scheduled_enable_time=s,console.log("Updated stream enable time:",s)):e==="endTime"&&(l.value.scheduled_disable_time=s,console.log("Updated stream disable time:",s)));const o=p.value.find(h=>h.value===n);o&&(o[e]=s)},U=()=>{const n=l.value.session_name;if(!n)return;const e=f();if(console.log(`Updating schedule from selection: ${n}, type: ${e}`),i[e]||(i[e]={}),!i[e][n])console.log("Session not found in schedules, creating new entry"),i[e][n]={text:S(n),startTime:l.value.scheduled_enable_time,endTime:l.value.scheduled_disable_time};else{const s=i[e][n];console.log("Found session schedule:",s),s&&(s.startTime&&(l.value.scheduled_enable_time=s.startTime,console.log("Setting enable time from session:",s.startTime)),s.endTime&&(l.value.scheduled_disable_time=s.endTime,console.log("Setting disable time from session:",s.endTime)))}},w=T([]),M=()=>{const n=f();console.log("Updating session options for type:",n),w.value=y[n]||[];const e=w.value.map(s=>s.value);e.includes(l.value.session_name)||(l.value.session_name=e[0]||"",U()),E()},{API_URL:O}=le().public,$=n=>{if(!n)return null;try{const e=n.includes("T")?_.fromISO(n,{zone:"UTC"}):_.fromSQL(n,{zone:"UTC"});return e.isValid?e.setZone("Asia/Jakarta").toFormat("yyyy-MM-dd'T'HH:mm"):(console.error("Invalid UTC time format:",n),null)}catch(e){return console.error("Error converting UTC to WIB:",e),null}},D=async()=>{try{const n=b.params.slug||b.params.id;console.log("Fetching stream data for slug:",n);const{data:e}=await V.get(`${O}/streams/${n}`);console.log("Raw data:",e),e.scheduled_enable_time&&(e.scheduled_enable_time=$(e.scheduled_enable_time),console.log("Converted enable time:",e.scheduled_enable_time)),e.scheduled_disable_time&&(e.scheduled_disable_time=$(e.scheduled_disable_time),console.log("Converted disable time:",e.scheduled_disable_time)),l.value=e;let s=null;if(typeof e.session_schedules=="string")try{s=JSON.parse(e.session_schedules),console.log("Parsed session schedules from JSON string")}catch(a){console.error("Error parsing session_schedules JSON:",a)}else e.session_schedules&&typeof e.session_schedules=="object"&&(s=e.session_schedules,console.log("Using session_schedules object directly"));if(s&&(Object.entries(s).forEach(([a,o])=>{i[a]=o}),console.log("Loaded session schedules:",i)),M(),l.value.session_name&&(!l.value.scheduled_enable_time||!l.value.scheduled_disable_time)&&U(),l.value.session_name&&(l.value.scheduled_enable_time||l.value.scheduled_disable_time)){const a=f();i[a]||(i[a]={}),i[a][l.value.session_name]||(i[a][l.value.session_name]={text:S(l.value.session_name),startTime:null,endTime:null}),l.value.scheduled_enable_time&&(i[a][l.value.session_name].startTime=l.value.scheduled_enable_time),l.value.scheduled_disable_time&&(i[a][l.value.session_name].endTime=l.value.scheduled_disable_time),console.log(`Updated session '${l.value.session_name}' in schedules:`,i[a][l.value.session_name]),E()}}catch(n){console.error("Error fetching stream data:",n)}},z=()=>{P.push("/rikya/components/Livestream")},B=()=>{P.push("/rikya/components/Artikel")};ie({title:"Edit Streaming",ogTitle:"Edit Streaming"});const H=()=>{confirm("Apakah Anda yakin ingin menghapus semua jadwal yang telah diatur?")&&(p.value.forEach(n=>{n.startTime=null,n.endTime=null,k(n.value,"startTime",null),k(n.value,"endTime",null)}),l.value.scheduled_enable_time=null,l.value.scheduled_disable_time=null,$toast.success("Semua jadwal berhasil dihapus"))};se(async()=>{await D()}),Q(()=>l.value.event_type,M),Q(()=>[l.value.scheduled_enable_time,l.value.scheduled_disable_time],([n,e])=>{if(l.value.session_name){const s=f();i[s]||(i[s]={}),i[s][l.value.session_name]||(i[s][l.value.session_name]={text:S(l.value.session_name),startTime:null,endTime:null}),n!==void 0&&(console.log(`Watched change to enable time: ${n}`),i[s][l.value.session_name].startTime=n),e!==void 0&&(console.log(`Watched change to disable time: ${e}`),i[s][l.value.session_name].endTime=e);const a=p.value.find(o=>o.value===l.value.session_name);a&&(n!==void 0&&(a.startTime=n),e!==void 0&&(a.endTime=e))}});const q=async()=>{var n,e,s,a;try{const o=b.params.slug||b.params.id;if(!o){alert("Slug tidak ditemukan!");return}const d=f(),h=i;if(console.log("Session schedules to save:",h),l.value.session_name&&((n=i[d])!=null&&n[l.value.session_name])){const r=i[d][l.value.session_name];l.value.scheduled_enable_time=r.startTime,l.value.scheduled_disable_time=r.endTime}let C=null;if(l.value.scheduled_enable_time)try{const r=_.fromISO(l.value.scheduled_enable_time,{zone:"Asia/Jakarta"});r.isValid?(C=r.toISO(),console.log("Converted enable time to ISO:",C)):console.error("Invalid enable time format:",l.value.scheduled_enable_time)}catch(r){console.error("Error converting enable time:",r)}let R=null;if(l.value.scheduled_disable_time)try{const r=_.fromISO(l.value.scheduled_disable_time,{zone:"Asia/Jakarta"});r.isValid?(R=r.toISO(),console.log("Converted disable time to ISO:",R)):console.error("Invalid disable time format:",l.value.scheduled_disable_time)}catch(r){console.error("Error converting disable time:",r)}const A={...l.value,scheduled_enable_time:C,scheduled_disable_time:R,session_schedules:h};console.log("Sending payload:",A);const Z=await V.put(`${O}/streams/${o}`,A);console.log("API response:",Z.data),alert("Stream berhasil diperbarui!"),P.go(-1)}catch(o){console.error("Error updating stream:",((e=o.response)==null?void 0:e.data)||o.message),alert(`Gagal memperbarui stream: ${((a=(s=o.response)==null?void 0:s.data)==null?void 0:a.error)||o.message}`)}};return(n,e)=>(v(),m("div",oe,[t("header",null,[t("div",{class:"header-content"},[t("h1",{class:"logo",onClick:B,style:{cursor:"pointer"}},e[14]||(e[14]=[t("img",{src:ne,alt:"RacingStation Logo",class:"logo-image"},null,-1),G(" Dashboard ")]))])]),t("div",ue,[e[39]||(e[39]=t("h2",{class:"black-text"},"Edit Livestream",-1)),t("form",{onSubmit:ae(q,["prevent"])},[t("div",null,[e[15]||(e[15]=t("label",{for:"title"},"Title",-1)),u(t("input",{type:"text","onUpdate:modelValue":e[0]||(e[0]=s=>l.value.title=s),id:"title",required:""},null,512),[[c,l.value.title]])]),t("div",de,[e[17]||(e[17]=t("label",{for:"category"},"Category:",-1)),u(t("select",{id:"category","onUpdate:modelValue":e[1]||(e[1]=s=>l.value.category=s),required:""},e[16]||(e[16]=[t("option",{value:"Motorsport"},"Motorsport",-1),t("option",{value:"Football"},"Football",-1)]),512),[[x,l.value.category]])]),t("div",null,[e[18]||(e[18]=t("label",{for:"event"},"Live Event",-1)),u(t("input",{type:"text","onUpdate:modelValue":e[2]||(e[2]=s=>l.value.event=s),id:"event"},null,512),[[c,l.value.event]])]),t("div",null,[e[20]||(e[20]=t("label",{for:"event_type"},"Tipe Race Week",-1)),u(t("select",{id:"event_type","onUpdate:modelValue":e[3]||(e[3]=s=>l.value.event_type=s),onChange:M},e[19]||(e[19]=[t("option",{value:""},"kosong (Race WEC dan lainnya)",-1),t("option",{value:"(The link will remain the same for all sessions in this race week including FP1, FP2, FP3, Qualifying, and Race)"},"Normal (F1)",-1),t("option",{value:"(The link will remain the same for all sessions in this race week including FP1, Sprint Qualifying, Sprint Race, Qualifying, and Race)"},"Sprint (F1)",-1),t("option",{value:"(The link will remain the same for all sessions in this race week including FP1, Practice, FP2, Qualifying, Sprint, Warm Up and Race)"},"Normal (MotoGP)",-1)]),544),[[x,l.value.event_type]])]),t("div",null,[e[21]||(e[21]=t("label",{for:"excerpt"},"Excerpt",-1)),u(t("input",{type:"text","onUpdate:modelValue":e[4]||(e[4]=s=>l.value.excerpt=s),id:"excerpt",required:""},null,512),[[c,l.value.excerpt]])]),t("div",null,[e[22]||(e[22]=t("label",{for:"link"},"Link 1",-1)),u(t("input",{type:"text","onUpdate:modelValue":e[5]||(e[5]=s=>l.value.link=s),id:"link",required:""},null,512),[[c,l.value.link]])]),t("div",null,[e[23]||(e[23]=t("label",{for:"link2"},"Link 2",-1)),u(t("input",{type:"text","onUpdate:modelValue":e[6]||(e[6]=s=>l.value.link2=s),id:"link2"},null,512),[[c,l.value.link2]])]),t("div",null,[e[24]||(e[24]=t("label",{for:"link3"},"Link 3",-1)),u(t("input",{type:"text","onUpdate:modelValue":e[7]||(e[7]=s=>l.value.link3=s),id:"link3"},null,512),[[c,l.value.link3]])]),t("div",null,[e[25]||(e[25]=t("label",{for:"link4"},"Link 4",-1)),u(t("input",{type:"text","onUpdate:modelValue":e[8]||(e[8]=s=>l.value.link4=s),id:"link4"},null,512),[[c,l.value.link4]])]),t("div",null,[e[26]||(e[26]=t("label",{for:"content"},"Content",-1)),u(t("textarea",{"onUpdate:modelValue":e[9]||(e[9]=s=>l.value.content=s),id:"content",required:""},null,512),[[c,l.value.content]])]),t("div",re,[e[27]||(e[27]=t("label",{for:"session_name"},"Pilih Sesi",-1)),u(t("select",{id:"session_name","onUpdate:modelValue":e[10]||(e[10]=s=>l.value.session_name=s),onChange:U},[(v(!0),m(J,null,L(w.value,s=>(v(),m("option",{key:s.value,value:s.value},g(s.text),9,ce))),128))],544),[[x,l.value.session_name]])]),t("div",me,[t("div",ve,[t("label",pe,[u(t("input",{type:"checkbox","onUpdate:modelValue":e[11]||(e[11]=s=>n.autoSwitchEnabled=s)},null,512),[[W,n.autoSwitchEnabled]]),e[28]||(e[28]=t("span",{class:"slider round"},null,-1))]),e[29]||(e[29]=t("span",{class:"toggle-label"},"Auto-switch sessions based on time",-1))]),n.autoSwitchEnabled?(v(),m("div",fe,[t("label",ge,[u(t("input",{type:"checkbox","onUpdate:modelValue":e[12]||(e[12]=s=>n.autoSaveOnSessionChange=s)},null,512),[[W,n.autoSaveOnSessionChange]]),e[30]||(e[30]=t("span",{class:"slider round"},null,-1))]),e[31]||(e[31]=t("span",{class:"toggle-label"},"Auto-save when session changes",-1))])):F("",!0)]),N.value?(v(),m("div",he,[t("div",_e,[t("h3",null,g(l.value.event_type?"Jadwal Untuk Semua Sesi":"Jadwal Event"),1)]),t("p",be,g(l.value.event_type?"Atur jadwal untuk semua sesi dalam race week. Jadwal akan otomatis diterapkan saat memilih sesi.":'Atur jadwal untuk event "Race WEC dan lainnya". Jadwal akan diterapkan ke sesi yang dipilih.'),1),(v(!0),m(J,null,L(p.value,(s,a)=>(v(),m("div",{key:a,class:"session-schedule"},[t("h4",null,g(s.text),1),t("div",ye,[t("div",Se,[t("label",{for:`start-${a}`},"Mulai",8,ke),u(t("input",{type:"datetime-local",id:`start-${a}`,"onUpdate:modelValue":o=>s.startTime=o,onInput:o=>k(s.value,"startTime",s.startTime)},null,40,Te),[[c,s.startTime]])]),t("div",Fe,[t("label",{for:`end-${a}`},"Selesai",8,xe),u(t("input",{type:"datetime-local",id:`end-${a}`,"onUpdate:modelValue":o=>s.endTime=o,onInput:o=>k(s.value,"endTime",s.endTime)},null,40,Pe),[[c,s.endTime]])])])]))),128)),t("button",{type:"button",onClick:H,class:"clear-schedule-btn"},e[32]||(e[32]=[t("i",{class:"fas fa-trash-alt"},null,-1),G(" Hapus Semua Jadwal")])),l.value.session_name?(v(),m("div",Ue,[t("h3",null,"Jadwal Aktif Saat Ini ("+g(S(l.value.session_name))+")",1),t("div",we,[t("div",Me,[e[33]||(e[33]=t("span",{class:"schedule-label"},"Jadwal Enable:",-1)),t("span",Ce,g(I(l.value.scheduled_enable_time)),1)]),t("div",Re,[e[34]||(e[34]=t("span",{class:"schedule-label"},"Jadwal Disable:",-1)),t("span",Ie,g(I(l.value.scheduled_disable_time)),1)])])])):F("",!0)])):F("",!0),t("div",null,[e[36]||(e[36]=t("label",{for:"status"},"Status",-1)),u(t("select",{"onUpdate:modelValue":e[13]||(e[13]=s=>l.value.status=s),id:"status"},e[35]||(e[35]=[t("option",{value:"enable"},"Enable",-1),t("option",{value:"disable"},"Disable",-1)]),512),[[x,l.value.status]])]),j.value?(v(),m("div",Ee,[e[37]||(e[37]=t("h3",null,"Debug Info:",-1)),t("pre",null,g(JSON.stringify(i,null,2)),1)])):F("",!0),t("div",{class:"buttons-container"},[e[38]||(e[38]=t("button",{type:"submit",class:"action-btn update-btn"},"Update Stream",-1)),t("button",{type:"button",onClick:z,class:"action-btn cancel-btn"},"Cancel")])],32)])]))}},Le=K(Oe,[["__scopeId","data-v-4d8f24c6"]]);export{Le as default};
