import{v as b,c as k,a as s,d as S,A as v,z as g,B as f,r as y,k as h,p as w,m as T,q as x,o as E}from"./VlqL9xn_.js";import{u as U}from"./BiDHMiVB.js";import{_ as N}from"./cYr9TBtS.js";const R={setup(){const d=y({id:null,name:"",link:""}),e=T(),m=x(),{API_URL:t}=h().public,p=async n=>{try{console.log("Fetching sosmed with ID:",n),console.log("API URL:",t),console.log("Full URL:",`${t}/sosmed-links/${n}`);const o=await fetch(`${t}/sosmed-links/${n}`);if(console.log("Response status:",o.status),console.log("Response headers:",o.headers),!o.ok){let a=`HTTP error! status: ${o.status}`;try{const i=await o.text();console.log("Error response body:",i),i&&(a+=` - ${i}`)}catch{console.log("Could not read error response body")}throw new Error(a)}const c=o.headers.get("content-type");if(!c||!c.includes("application/json")){const a=await o.text();throw console.log("Non-JSON response:",a),new Error("Server returned non-JSON response")}const l=await o.json();console.log("Fetched data:",l),d.value={id:l.id,name:l.name||"",link:l.link||""}}catch(o){console.error("Error fetching sosmed:",o),alert("Gagal memuat data sosmed: "+o.message)}},u=async()=>{try{const n={name:d.value.name,link:d.value.link};console.log("Submitting payload:",n),console.log("Update URL:",`${t}/sosmed-links/${d.value.id}`);const o=await fetch(`${t}/sosmed-links/${d.value.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(console.log("Update response status:",o.status),!o.ok){let a=`HTTP error! status: ${o.status}`;try{const i=await o.text();console.log("Update error response:",i),i&&(a+=` - ${i}`)}catch{console.log("Could not read update error response")}throw new Error(a)}const c=o.headers.get("content-type");if(!c||!c.includes("application/json")){const a=await o.text();throw console.log("Non-JSON update response:",a),new Error("Server returned non-JSON response")}const l=await o.json();if(console.log("Update result:",l),l.message)alert("Sosmed Link berhasil diperbarui!"),m.push("/rikya/components/Sosmed");else throw new Error(l.error||"Gagal memperbarui sosmed link")}catch(n){console.error("Error:",n),alert(n.message||"Terjadi kesalahan saat memperbarui")}},r=()=>{m.push("/rikya/components/Sosmed")};return w(()=>{const n=e.params.id;n?p(n):(alert("ID Categories tidak valid"),m.push("/rikya/components/Sosmed"))}),U({title:"Edit Sosmed",ogTitle:"Edit Sosmed"}),{sosmed:d,submitSosmed:u,navigateToSosmed:r}}},_={class:"app-wrapper"},C={class:"header-content"},L={class:"dashboard"},j={class:"form-container"},I={class:"form-group"},M={class:"form-group"},$={class:"buttons-container"};function D(d,e,m,t,p,u){return E(),k("div",_,[s("header",null,[s("div",C,[s("h1",{class:"logo",onClick:e[0]||(e[0]=(...r)=>t.navigateToSosmed&&t.navigateToSosmed(...r)),style:{cursor:"pointer"}},e[5]||(e[5]=[s("img",{src:N,alt:"RacingStation Logo",class:"logo-image"},null,-1),S(" Dashboard ")]))])]),s("div",L,[s("div",j,[e[9]||(e[9]=s("h1",{class:"black-text"},"Edit Sosmed",-1)),s("form",{onSubmit:e[4]||(e[4]=v((...r)=>t.submitSosmed&&t.submitSosmed(...r),["prevent"]))},[s("div",I,[e[6]||(e[6]=s("label",{for:"name"},"Nama",-1)),g(s("input",{type:"text",id:"name","onUpdate:modelValue":e[1]||(e[1]=r=>t.sosmed.name=r),required:""},null,512),[[f,t.sosmed.name]])]),s("div",M,[e[7]||(e[7]=s("label",{for:"description"},"Link",-1)),g(s("input",{type:"text",id:"description","onUpdate:modelValue":e[2]||(e[2]=r=>t.sosmed.link=r),required:""},null,512),[[f,t.sosmed.link]])]),s("div",$,[e[8]||(e[8]=s("button",{type:"submit",class:"action-btn update-btn"},"Update Sosmed",-1)),s("button",{type:"button",onClick:e[3]||(e[3]=(...r)=>t.navigateToSosmed&&t.navigateToSosmed(...r)),class:"action-btn cancel-btn"},"Cancel")])],32)])])])}const B=b(R,[["render",D],["__scopeId","data-v-c681ca0b"]]);export{B as default};
